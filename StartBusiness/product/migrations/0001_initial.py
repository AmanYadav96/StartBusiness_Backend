# Generated by Django 4.1.12 on 2024-03-19 08:31

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brand', '0001_initial'),
        ('category', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('sku', models.CharField(default='PDV28744', max_length=8)),
                ('country_of_origin', models.CharField(max_length=100)),
                ('image', models.ImageField(null=True, upload_to='product_images/')),
                ('image1', models.ImageField(null=True, upload_to='product_images/')),
                ('image2', models.ImageField(null=True, upload_to='product_images/')),
                ('image3', models.ImageField(null=True, upload_to='product_images/')),
                ('image4', models.ImageField(null=True, upload_to='product_images/')),
                ('image5', models.ImageField(null=True, upload_to='product_images/')),
                ('demo_video', models.FileField(null=True, upload_to='product_videos/')),
                ('length', models.FloatField(blank=True, null=True)),
                ('length_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('width_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('thickness', models.FloatField(blank=True, null=True)),
                ('thickness_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('weight_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('style_design', models.CharField(blank=True, max_length=100, null=True)),
                ('surface_finish', models.CharField(blank=True, max_length=100, null=True)),
                ('edge_type', models.CharField(blank=True, max_length=100, null=True)),
                ('sq_ft_box', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('no_of_pcs_box', models.IntegerField(blank=True, null=True)),
                ('product_collections', models.CharField(blank=True, max_length=10000, null=True)),
                ('label', models.CharField(blank=True, max_length=10000, null=True)),
                ('layout', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10000, null=True), size=None)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('offer_type', models.CharField(blank=True, max_length=255, null=True)),
                ('discount', models.PositiveIntegerField(default=0, null=True)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_price_start', models.DateTimeField(blank=True, null=True)),
                ('discount_price_end', models.DateTimeField(blank=True, null=True)),
                ('bulk_quantity_pricing', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('min_order_quantity', models.PositiveIntegerField(null=True)),
                ('bulk_discount', models.PositiveIntegerField(default=0)),
                ('tax_rate', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('tax_code', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_class', models.CharField(blank=True, max_length=225, null=True)),
                ('stock_quantity', models.PositiveIntegerField(null=True)),
                ('availability', models.BooleanField(default=True)),
                ('size_variant', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), null=True, size=None)),
                ('color_variant', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), null=True, size=None)),
                ('style_variant', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), null=True, size=None)),
                ('related_product', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), null=True, size=None)),
                ('cross_selling_product', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), null=True, size=None)),
                ('product_use', models.TextField(blank=True)),
                ('maintainance_details', models.TextField(blank=True, null=True)),
                ('privacy_policy', models.TextField(blank=True, null=True)),
                ('product_url', models.URLField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('featured_keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('long_tail_keywords', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft'), ('Pending', 'Pending')], max_length=50, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brand.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.category')),
            ],
        ),
    ]
